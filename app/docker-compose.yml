version: '3.9'
services:
  # front-end:
  #  build: ./front-end
  #  depends_on:
  #    back-end:
  #      condition: service_healthy
  #  # Os `healthcheck` devem garantir que a aplicação
  #  # está operacional, antes de liberar o container
  #  healthcheck:
  #    test: ["CMD", "lsof", "-t", "-i:3000"]  # Caso utilize outra porta interna para o front, altere ela aqui também
  #    timeout: 10s
  #    retries: 5
  #  ports:
  #    - 3000:3000
  #  volumes:
  #    - ./front-end:/app
  #  restart: always
  back-end:
   build: ./back-end
   depends_on:
     db:
       condition: service_healthy
   ports:
     - 3001:3001
   volumes:
     - ./back-end:/app
   environment:
     - PORT=3001
     # Os dados abaixo se referem ao container `db`
     # Dica: Relembre aqui da comunicação interna entre containers
     - DB_USER=postgres
     - DB_PASS=postgres
     - DB_HOST=db
     - DB_NAME=meu-guru-practice-test
     - DB_PORT=3306
   healthcheck:
     test: ["CMD", "lsof", "-t", "-i:3001"] # Caso utilize outra porta interna para o back, altere ela aqui também
     timeout: 10s
     retries: 5
   restart: always
  db:
    image: postgres
    container_name: db
    ports:
      - 3002:3306
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: meu-guru-practice-test
    restart: 'always'
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "meu-guru-practice-test", "-U", "postgres" ] # Deve aguardar o banco ficar operacional
      timeout: 10s
      retries: 5
    cap_add:
      - SYS_NICE # Deve omitir alertas menores